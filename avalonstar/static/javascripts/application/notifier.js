// Generated by CoffeeScript 1.8.0
(function() {
  var channel, delay, donated, hosted, poolDonating, poolHosting, poolSubscribing, pusher, running, soundDonation, soundSubscription, source, subscribed;

  delay = 5;

  running = false;

  poolDonating = 0;

  poolHosting = 0;

  poolSubscribing = 0;

  soundDonation = new Audio('/static/audio/donation.ogg');

  soundDonation.volume = 0.7;

  soundSubscription = new Audio('/static/audio/subscription.ogg');

  soundSubscription.volume = 0.7;

  subscribed = function(data, added) {
    if (!running) {
      running = true;
      console.log("" + data.username + " has subscribed!");
      soundSubscription.play();
      ($('.js-type')).text('Subscription');
      ($('.js-username')).text(data.username);
      ($('.js-subscribed')).addClass('visible');
      ($('.js-square-flipper')).addClass('toggle');
      ($('.js-square-subscribed')).addClass('visible');
      return setTimeout((function() {
        ($('.js-subscribed')).removeClass('visible');
        ($('.js-square-flipper')).removeClass('toggle');
        ($('.js-square-subscribed')).removeClass('visible');
        running = false;
        if (poolSubscribing >= 1) {
          poolSubscribing--;
          return console.log("There are " + poolSubscribing + " subs left in the pool.");
        }
      }), 6900);
    } else {
      if (!added) {
        poolSubscribing++;
        console.log("There are " + poolSubscribing + " subs left in the pool.");
      }
      return setTimeout((function() {
        console.log("Running the pool subscription for, " + data.username + ".");
        return subscribed(data, true);
      }), delay * 1000);
    }
  };

  donated = function(data, added) {
    if (!running && poolSubscribing === 0) {
      running = true;
      console.log("" + data.nickname + " has donated " + data.amount + "!");
      soundDonation.play();
      ($('.js-type')).text('Donation');
      ($('.js-username')).text(data.nickname);
      ($('.js-donated')).addClass('visible');
      ($('.js-square-flipper')).addClass('toggle');
      ($('.js-square-donated')).addClass('visible');
      return setTimeout((function() {
        ($('.js-donated')).removeClass('visible');
        ($('.js-square-flipper')).removeClass('toggle');
        ($('.js-square-donated')).removeClass('visible');
        running = false;
        if (poolDonating >= 1) {
          poolDonating--;
          return console.log("There are " + poolDonating + " donators left in the pool.");
        }
      }), 6900);
    } else {
      if (!added) {
        poolDonating++;
        console.log("There are " + poolDonating + " donators left in the pool.");
      }
      return setTimeout((function() {
        console.log("Running the pool donation for, " + data.nickname + ".");
        return donated(data, true);
      }), delay * 1000);
    }
  };

  hosted = function(data) {
    if (!running && poolSubscribing === 0 && poolDonating === 0) {
      running = true;
      console.log("" + data.username + " has hosted the channel!");
      ($('.js-type')).text('Host');
      ($('.js-username')).text(data.username);
      ($('.js-hosted')).addClass('visible');
      ($('.js-square-flipper')).addClass('toggle');
      ($('.js-square-hosted')).addClass('visible');
      return setTimeout((function() {
        ($('.js-hosted')).removeClass('visible');
        ($('.js-square-flipper')).removeClass('toggle');
        ($('.js-square-hosted')).removeClass('visible');
        return running = false;
      }), 6900);
    } else {
      return setTimeout((function() {
        return hosted(data);
      }), delay * 1000);
    }
  };

  pusher = new Pusher('207f2c96da3bdb9301f8');

  channel = pusher.subscribe('live');

  channel.bind('subscribed', function(data) {
    return subscribed(data, false);
  });

  channel.bind('hosted', function(data) {
    return hosted(data, false);
  });

  source = new EventSource("https://imraising.tv/api/v1/listen?apikey=nuZOkYmLF37yQJdzNLWLRA");

  source.addEventListener('donation.add', function(data) {
    return donated(data, false);
  });

}).call(this);
